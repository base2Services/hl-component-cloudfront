# true | false
enabled: true
comment: ${EnvironmentName} distribution
export_name: cloudfront
#default_root_object: index.html

# http1.1 | http2
http_version: http2
# ipv6: false

# custom_error_responses:
#   -
#     ErrorCachingMinTTL: 0
#     ErrorCode: 404
#     ResponseCode: 200
#     ResponsePagePath: /index.html

ssl:
  # acm | cloudfront | iam
  type: cloudfront
  # sni-only | vip
  support_method: sni-only
  # SSLv3 | TLSv1 | TLSv1_2016 | TLSv1.1_2016 | TLSv1.2_2018
  minimum_protocol_version: TLSv1.2_2018

behaviours:
  default:
    # GET, HEAD, OPTIONS, PUT, PATCH, POST, and DELETE
    AllowedMethods:
      - GET
      - HEAD
    Compress: true
    TargetOriginId: s3bucket
    ForwardedValues:
      Cookies:
        Forward: none
      QueryString: true
    # allow-all | redirect-to-https | https-only
    ViewerProtocolPolicy: redirect-to-https
  # nondefaultcachebehaviours:
  #   -
  #     AllowedMethods:
  #       - GET
  #       - HEAD
  #       - OPTIONS
  #     Compress: true
  #     TargetOriginId: s3bucket
  #     ForwardedValues:
  #       Cookies:
  #         Forward: none
  #       QueryString: false
  #     # allow-all | redirect-to-https | https-only
  #     ViewerProtocolPolicy: redirect-to-https
  #     PathPattern: /index.html

# dns_records:
#   - mycdn.${DnsDomain}

# logs:
#   bucket: mybucket.com
#   prefix: mysite

cloudfront_functions:
  functions:
    CloudFrontCR:
      handler: lambda_handler.handler
      runtime: python3.6
      code: CloudFrontCR/lambda_handler.py
      timeout: 30
      log_retention: 7
      role: CloudFrontCRRole

  roles:
    CloudFrontCRRole:
      policies_inline:
        - logs
        - cloudfront
        - events

  custom_policies:
    logs:
      action:
        - logs:PutLogEvents
        - logs:DescribeLogStreams
        - logs:DescribeLogGroups
        - logs:CreateLogStream
        - logs:CreateLogGroup
      resource:
        - '*'
    cloudfront:
      action:
        - cloudfront:GetDistribution
        - cloudfront:GetDistributionConfig
        - cloudfront:CreateDistribution
        - cloudfront:UpdateDistribution
        - cloudfront:DeleteDistribution
        - cloudfront:TagResource
      resource:
        - '*'
    events:
      action:
        - events:PutRule
        - events:PutTargets
        - events:ListTargetsByRule
      resource:
        - '*'
